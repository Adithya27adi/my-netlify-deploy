# Generated by Django 5.0.7 on 2025-08-13 09:32

import core.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50, unique=True)),
                ('order_type', models.CharField(choices=[('qr_download', 'QR Download'), ('pvc_card', 'PVC Card'), ('nfc_card', 'NFC Card')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_address', models.TextField(blank=True)),
                ('delivery_phone', models.CharField(blank=True, max_length=20)),
                ('delivery_pincode', models.CharField(blank=True, max_length=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_provider', models.CharField(choices=[('razorpay', 'Razorpay'), ('stripe', 'Stripe')], max_length=20)),
                ('payment_provider_id', models.CharField(blank=True, max_length=100)),
                ('payment_response', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RTORecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('contact_no', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('record_type', models.CharField(choices=[('rc', 'RC Record'), ('school', 'School Record'), ('other', 'Other Record')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('rc_photo', models.ImageField(blank=True, help_text='RC registration certificate photo', null=True, upload_to=core.models.upload_to_user_folder, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('insurance_doc', models.FileField(blank=True, help_text='Insurance document', null=True, upload_to=core.models.upload_to_user_folder, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('pu_check_doc', models.FileField(blank=True, help_text='PU check document', null=True, upload_to=core.models.upload_to_user_folder, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('driving_license_doc', models.FileField(blank=True, help_text='Driving license document', null=True, upload_to=core.models.upload_to_user_folder, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('qr_code_image', models.ImageField(blank=True, help_text='Generated QR code image', null=True, upload_to='qr_codes/')),
                ('pdf_card_filepath', models.CharField(blank=True, help_text='Path to generated PDF card', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes for review')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rto_records', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'RTO Record',
                'verbose_name_plural': 'RTO Records',
                'db_table': 'rto_record',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PrintOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_production', 'In Production'), ('printed', 'Printed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('production_notes', models.TextField(blank=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100)),
                ('shipping_partner', models.CharField(blank=True, max_length=50)),
                ('estimated_delivery_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('printed_at', models.DateTimeField(blank=True, null=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='print_order', to='core.order')),
                ('rto_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.rtorecord')),
            ],
            options={
                'verbose_name': 'Print Order',
                'verbose_name_plural': 'Print Orders',
                'db_table': 'print_order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='rto_record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='core.rtorecord'),
        ),
    ]
